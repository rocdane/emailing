name: Laravel Build, Test and Dockerize

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_NAME: laravel-app
  DB_CONNECTION: sqlite
  DB_DATABASE: ":memory:"

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, ctype, fileinfo, openssl, PDO, tokenizer, xml, gd, pdo_mysql, bcmath, redis
          coverage: none

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction
          npm ci
          npm run build

      - name: Generate app key
        run: php artisan key:generate

      - name: Directory Permissions
        run: |
          mkdir -p storage/framework/{sessions,views,cache}
          chmod -R 777 storage bootstrap/cache

      - name: Execute tests
        run: php artisan test

  build-and-push:
    needs: setup-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
