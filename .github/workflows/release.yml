name: Deploy Laravel to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  LARAVEL_ENV: production
  APP_NAME: "Mon App Laravel"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo, pdo_mysql, xml, ctype, json, tokenizer, gd
          coverage: none

      - name: Copy environment file
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Generate application key
        run: php artisan key:generate --show

      - name: Build assets (if using Vite)
        run: |
          npm ci --silent
          npm run build --silent

      - name: Create deployment archive
        run: |
          mkdir -p deployment
          # Exclure les fichiers inutiles pour le déploiement
          rsync -av --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='storage/*' \
            --exclude='tests' \
            --exclude='.env' \
            --exclude='deployment' \
            ./ deployment/

          # Créer l'archive
          tar -czf deployment.tar.gz deployment/

      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deployment.tar.gz"
          target: "/tmp/"

      - name: Extract and setup on server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Variables
            APP_DIR="/var/www/laravel-app"
            BACKUP_DIR="/var/www/backups"
            DEPLOY_DIR="$APP_DIR-$(date +%Y%m%d%H%M%S)"

            # Créer les répertoires si nécessaire
            sudo mkdir -p $APP_DIR $BACKUP_DIR
            sudo chown -R ${{ secrets.SSH_USERNAME }}:www-data $APP_DIR
            sudo chmod -R 775 $APP_DIR/storage

            # Extraire l'archive
            tar -xzf /tmp/deployment.tar.gz -C /tmp/

            # Créer un backup de l'ancienne version
            if [ -d "$APP_DIR" ]; then
              sudo cp -r $APP_DIR $BACKUP_DIR/backup-$(date +%Y%m%d%H%M%S)
            fi

            # Déplacer les fichiers
            sudo rm -rf $DEPLOY_DIR
            sudo mv /tmp/deployment $DEPLOY_DIR

            # Copier les fichiers de configuration existants
            if [ -d "$APP_DIR" ]; then
              cp $APP_DIR/.env $DEPLOY_DIR/.env 2>/dev/null || true
              cp -r $APP_DIR/storage $DEPLOY_DIR/ 2>/dev/null || true
            fi

            # Mettre les permissions
            sudo chown -R ${{ secrets.SSH_USERNAME }}:www-data $DEPLOY_DIR
            sudo chmod -R 775 $DEPLOY_DIR/storage
            sudo chmod -R 775 $DEPLOY_DIR/bootstrap/cache

            # Mise à jour symlink
            sudo rm -f $APP_DIR
            sudo ln -sf $DEPLOY_DIR $APP_DIR

            # Nettoyage
            rm -f /tmp/deployment.tar.gz

            # Aller dans le répertoire de l'application
            cd $APP_DIR

            # Installation des dépendances
            composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

            # Migrations et optimisations
            php artisan migrate --force
            php artisan optimize:clear
            php artisan optimize
            php artisan storage:link

            # Mise à jour des permissions
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache

            # Redémarrer les services
            sudo systemctl reload php8.2-fpm
            sudo systemctl reload nginx

            # Nettoyage des anciens déploiements (garder les 5 derniers)
            ls -dt /var/www/laravel-app-* | tail -n +6 | xargs sudo rm -rf

            echo "✅ Déploiement terminé avec succès !"

      - name: Cleanup
        run: rm -rf deployment deployment.tar.gz
